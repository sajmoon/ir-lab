'''C++''' √§r ett [[programspr√•k]] med st√∂d f√∂r [[dataabstraktion]], [[objektorienterad programmering]] och [[generisk programmering]]. Spr√•ket utvecklades i b√∂rjan p√• [[1980-talet]] av [[Bjarne Stroustrup]] vid [[Bell Labs]]. I dag √§r det ett av de popul√§raste programspr√•ken och anv√§nds inom allt fr√•n datorspel till konsumentelektronik.C++ √§r baserat p√• [[C (programspr√•k)|programspr√•ket C]] och har anammat m√•nga begrepp och konstruktioner fr√•n det. Dock har man i C++ valt att st√∂dja [[objektorienterad programmering]] genom att implementera bland annat [[klass (programmering)|klassbegreppet]]. C++ omfattar inte C i strikt mening d√• det finns flera skillnader i [[semantik]] mellan C och den delm√§ngd av C++ som motsvarar C.C++ anv√§nds i allt st√∂rre utstr√§ckning d√§r C traditionellt har anv√§nts.== √ñversikt ==Spr√•kets [[syntax]] bygger p√• C men har ut√∂kats f√∂r att st√∂dja fler [[programmeringsparadigm]]er. √Ñven om syntaxen i C++ p√•minner starkt om den i C √§r programmen ofta uppbyggda p√• annorlunda s√§tt.F√∂r att st√∂dja [[objektorientering|objektorienterad programmering]] implementerades klassbegreppet genom att ut√∂ka syntaxen f√∂r strukturer och till√•ta b√•de funktioner och data att vara medlemmar i en struktur. Spr√•ket har dessutom st√∂d f√∂r [[konstruktor]]er, [[destruktor]]er, [[arv (programmering)|arv]], [[Funktion (programmering)#Virtuell funktion|virtuella funktioner]] samt √∂verlagring av [[operator]]er.En kraftfull sida hos C++ √§r ''templates''. Dessa √§r en syntax som m√∂jligg√∂r √•teranv√§ndning av samma kod men f√∂r olika datatyper. Precis som man brukar undvika att h√•rdkoda data i sin kod kan man anv√§nda templates f√∂r att undvika att h√•rdkoda datatyper. Templates kan g√∂ras mycket avancerade, till den grad att det finns hela b√∂cker om √§mnet. Det finns ett antal [[Standard Template Library|templates i standardbiblioteket]], till exempel listor, k√∂er och tabeller f√∂r olika datatyper ([[heltal]], [[flyttal]], [[Str√§ng (data)|str√§ngar]] etc.).Typsystemet √§r mer stringent √§n f√∂r C och f√∂rbjuder √•tskilliga av de implicita typkonverteringar som C till√•ter. Som exempel kan n√§mnas att konverteringen fr√•n &lt;code&gt;void&amp;nbsp;*&lt;/code&gt; till andra pekartyper √§r f√∂rbjuden i C++ men till√•ten i C.== Historia ==Stroustrup p√•b√∂rjade sitt arbete med spr√•ket [[1979]], inspirerad av bland annat [[Simula|Simula-67]] och [[FORTRAN 77]], och det b√∂rjade anv√§ndas inom [[AT&amp;T]] i augusti [[1983]].&lt;ref name=&quot;StroustrupFAQ&quot;&gt;{{webbref |url=http://public.research.att.com/~bs/bs_faq.html#invention |titel=Stroustrup: FAQ |h√§mtdatum=2 november 2009 |format= |verk= }}&lt;/ref&gt; Den ursprungliga kompilatorn kallades &quot;CFront&quot; och var en f√∂rkompilator till C som genererade C-kod.&lt;ref&gt;{{webbref |url=http://public.research.att.com/~bs/bs_faq.html#bootstrapping |titel=Stroustrup: FAQ |h√§mtdatum=2 november 2009 |format= |verk= }}&lt;/ref&gt;Den f√∂rsta kommersiellt tillg√§ngliga kompilatorn kom oktober [[1985]].&lt;ref name=&quot;StroustrupFAQ&quot;/&gt; En internationell standardisering av C++ kom [[1998]] (ISO/IEC 14882-1998). Denna standard, vilken uppdaterades √•r 2003 och som g√§ller √§n idag, kommer dock ers√§ttas av en ny, som f√∂r tillf√§llet har arbetsnamnet C++0x.== Kodexempel ===== Hello World ===Exempelkod f√∂r [[Hello World]], som [[Bjarne Stroustrup]] presenterar i sin bok ''[[The C++ Programming Language]]'':&lt;ref&gt;{{webbref |url=http://www.research.att.com/~bs/3rd_issues.html |titel=Open Issues for the C++ Programming Language (3rd edition) |f√∂rnamn=Bjarne |efternamn=Stroustrup }}, errata f√∂r sid 633, d√§r fr√•gan om &lt;code&gt;std::endl&lt;/code&gt; diskuteras.&lt;/ref&gt;&lt;source lang=&quot;cpp&quot;&gt;#include &lt;iostream&gt;int main() {   std::cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; std::endl;   return 0;}&lt;/source&gt;=== I/O och sortering ===Programmet l√§ser in en serie tal, sorterar dem, och skriver ut dem.&lt;source lang=&quot;cpp&quot;&gt;#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std;int main() {    vector&lt;int&gt; vektor;    int tal;    while(cin &gt;&gt; tal) {       vektor.push_back(tal);    }    sort(vektor.begin(), vektor.end());    for (vector&lt;int&gt;::const_iterator i = vektor.begin(); i != vektor.end(); ++i) {        cout &lt;&lt; *i &lt;&lt; endl;    }    return 0;}&lt;/source&gt;== Grafisk programmering ==C++ inneh√•ller inget grafiskt bibliotek d√• standarden √§r menad att vara portabel och ej bundentill en specifik plattform. D√§remot finns det ett flertal till√§ggsbibliotek som kan anv√§ndasf√∂r att utveckla grafiska anv√§ndargr√§nssnitt.Vill man skriva portabla grafiska program finns till exempel [[Qt]], som √§r ett ramverk f√∂r utveckling av grafiska program i C++ som numera √§gs och utvecklas av [[Nokia]]. Qt finns f√∂r [[GNU/Linux]], [[Microsoft Windows|Windows]], [[Mac OS X]], Embedded Linux och f√∂r [[Windows CE]]. Det finns ocks√• bindningar f√∂r [[GTK+]] som kan anv√§ndas f√∂r utveckling av grafiska program under GNU/Linux, Windows, Mac OS X, [[SkyOS]] och [[OS/2]]. B√•de Qt och GTK+ finns tillg√§ngliga under [[Fri programvara|fria]] [[Programvarulicens|licenser]].I [[Microsoft Windows]] √§r det m√∂jligt att programmera direkt i [[Win32]]-[[API]]:t, vilket √§r ett gr√§nssnitt direkt mot operativsystemet. Detta ger dock av naturliga sk√§l icke portabel kod. Dessutom best√•r det till stor del av C-funktioner och -strukturer och inte av C++. Klassbiblioteket [[MFC]] (''Microsoft Foundation Class Library'') √§r ett bibliotek vilket √§r t√§nkt att kapsla in dessa funktioner i C++-klasser.[[Direct X]] brukar ofta f√∂rknippas med C++ och √§r ett spelutvecklingsbibliotek utgivet av Microsoft. Det har en direkt koppling till Win32-API:t i form av att m√•nga basoperationer f√∂r f√∂nster fortfarande sker genom det.[[Simple DirectMedia Layer|SDL]] (''Simple DirectMedia Layer'') √§r ett API f√∂r grafik som √§r ganska l√§tt att anv√§nda. Det har inte lika m√•nga funktioner som Direct X och Win32-API:t men det tenderar att g√• snabbare att programmera i och ger till skillnad fr√•n de tidigare n√§mnda alternativen portabel kod.== Noter ==&lt;references/&gt;== Externa l√§nkar ==* [http://www.infa.abo.fi/~chakie/kurser/c++/html/book1.html C++-manual]* [http://www.cppreference.com/index.html C/C++ Reference]* [http://cplusplus.com/ cplusplus.com]* [http://www.libsdl.org/ SDLs egen hemsida]{{STANDARDSORTERING:C }}&lt;!-- mellanslag p√• slutet f√∂r att sorteras r√§tt --&gt;[[Kategori:Programspr√•k]][[af:C++]][[ar:ÿ≥Ÿä++]][[an:C++]][[az:C++]][[bn:‡¶∏‡¶ø++]][[be:C++]][[bs:C++]][[br:Areg C++]][[bg:C++]][[ca:C++]][[cv:–°–∏++]][[cs:C++]][[da:C++]][[de:C++]][[et:C++]][[el:C++]][[en:C++]][[es:C++]][[eo:C++]][[eu:C++]][[fa:ÿ≥€å++]][[fr:C++]][[ga:C++]][[gl:C++]][[gan:C++]][[ko:C++]][[hy:C++]][[hi:‡§∏‡•Ä++]][[hr:C++]][[id:C++]][[ia:C++]][[is:C++]][[it:C++]][[he:C++]][[jv:C++]][[ka:C++]][[la:C++]][[lv:C++]][[lb:C++]][[lt:C++]][[hu:C++]][[mk:C++]][[ml:‡¥∏‡¥ø++]][[mr:‡§∏‡•Ä ‡§™‡•?‡§≤‡§∏ ‡§™‡•?‡§≤‡§∏ ‡§™‡•?‡§∞‡•ã‡§ó‡•?‡§∞‡•Ö‡§Æ‡§ø‡§Ç‡§ó ‡§≤‡§?‡§ó‡•?‡§µ‡•á‡§ú]][[arz:ÿ≥Ÿâ++]][[ms:C++]][[my:C++]][[nl:C++]][[new:‡§∏‡•Ä++]][[ja:C++]][[no:C++]][[nn:C++]][[oc:C++]][[uz:C++]][[pl:C++]][[pt:C++]][[kaa:C++]][[ro:C++]][[ru:C++]][[sah:C++]][[sq:C++]][[simple:C++]][[sk:C++]][[sl:C++]][[sr:C++]][[sh:C++]][[fi:C++]][[ta:‡Æö‡Æø++]][[te:‡∞∏‡±Ä ‡∞™‡±?‡∞≤‡∞∏‡±? ‡∞™‡±?‡∞≤‡∞∏‡±?]][[th:‡∏†‡∏≤‡∏©‡∏≤‡∏ã‡∏µ‡∏û‡∏•‡∏±‡∏™‡∏û‡∏•‡∏±‡∏™]][[tg:C++]][[tr:C++]][[tk:C++ programmirleme]][[bug:C++]][[uk:C++]][[vi:C++]][[yi:++C]][[yo:C++]][[zh-yue:C++]][[bat-smg:C++]][[zh:C++]]